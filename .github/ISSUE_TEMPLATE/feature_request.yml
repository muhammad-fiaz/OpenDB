name: âœ¨ Feature Request
description: Suggest a new feature or enhancement for OpenDB
title: "[Feature]: "
labels: ["enhancement", "needs-discussion"]
assignees: []

body:
  - type: markdown
    attributes:
      value: |
        Thanks for suggesting a new feature! Please provide as much detail as possible.

  - type: checkboxes
    id: checklist
    attributes:
      label: Pre-submission Checklist
      description: Please confirm the following before submitting
      options:
        - label: I have searched existing issues to ensure this feature hasn't been requested
          required: true
        - label: This feature aligns with OpenDB's goals (hybrid database for AI/LLM applications)
          required: true
        - label: I have read the [documentation](https://muhammad-fiaz.github.io/opendb)
          required: false

  - type: textarea
    id: problem
    attributes:
      label: Problem Statement
      description: What problem does this feature solve?
      placeholder: "Example: When building RAG systems, I need to filter vector search results by metadata"
    validations:
      required: true

  - type: textarea
    id: solution
    attributes:
      label: Proposed Solution
      description: How would you like OpenDB to solve this problem?
      placeholder: |
        Example: Add a `search_similar_filtered()` method that accepts metadata filters:
        
        ```rust
        db.search_similar_filtered(&embedding, 10, |memory| {
            memory.metadata.get("category") == Some("research")
        })?;
        ```
    validations:
      required: true

  - type: textarea
    id: alternatives
    attributes:
      label: Alternatives Considered
      description: What other solutions have you considered?
      placeholder: "Example: I tried filtering results manually after search, but it's inefficient for large datasets"

  - type: textarea
    id: use-case
    attributes:
      label: Use Case
      description: Describe how this feature would be used in practice
      placeholder: |
        Example: Building a multimodal RAG system that searches across documents of different types.
        Need to search only within PDF documents or only within audio transcriptions.

  - type: textarea
    id: api-design
    attributes:
      label: API Design (Optional)
      description: Propose how the API should look
      placeholder: |
        ```rust
        // Example API design
        db.search_with_filter(
            &embedding,
            top_k: 10,
            filter: MetadataFilter::new()
                .eq("file_type", "pdf")
                .gt("importance", 0.7)
        )?;
        ```
      render: rust

  - type: dropdown
    id: category
    attributes:
      label: Feature Category
      description: What category does this feature fall into?
      options:
        - API Enhancement
        - New Data Type
        - Performance Improvement
        - Developer Experience
        - Documentation
        - Testing
        - Tooling
        - Other
    validations:
      required: true

  - type: dropdown
    id: module
    attributes:
      label: Affected Module
      description: Which module would this feature affect?
      options:
        - Key-Value Store
        - Records/Memory Management
        - Graph Operations
        - Vector Search
        - Multimodal Files
        - Transactions
        - Cache
        - Storage Backend
        - Multiple Modules
        - New Module
    validations:
      required: false

  - type: dropdown
    id: priority
    attributes:
      label: Priority
      description: How important is this feature to you?
      options:
        - Critical (blocking my use case)
        - High (significantly improves usability)
        - Medium (nice to have)
        - Low (minor improvement)
    validations:
      required: true

  - type: checkboxes
    id: contribution
    attributes:
      label: Contribution
      description: Are you willing to contribute to this feature?
      options:
        - label: I am willing to implement this feature myself
        - label: I am willing to help test this feature
        - label: I can provide detailed requirements
        - label: I can review pull requests

  - type: textarea
    id: additional
    attributes:
      label: Additional Context
      description: Add any other context, screenshots, or examples
