name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
    
    - name: Install RocksDB dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y librocksdb-dev clang
    
    - name: Install RocksDB dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install rocksdb llvm
    
    - name: Install RocksDB dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        echo "RocksDB will be built from source"
    
    - name: Cache dependencies
      uses: Swatinem/rust-cache@v2
      with:
        shared-key: ${{ matrix.os }}
        cache-on-failure: true
    
    - name: Run tests
      run: cargo test --all-features

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
    
    - name: Run security audit
      uses: rustsec/audit-check@v1
      with:
        token: ${{ secrets.GH_TOKEN }}
